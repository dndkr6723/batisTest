create table questions (
    question_id number primary key,
    question_category_id number UNIQUE,
    user_id_send number,
    question_title varchar2(1000),
    question_content varchar2(1000),
    question_image varchar2(1000),
    question_check varchar2(1000),
    question_date date default sysdate,
    user_id_receive number
);


create table question_categories (
    question_category_id number primary key,
    question_category_name varchar2(1000)
);
    
create table restaurants (
    restaurant_id number primary key,
    user_id number UNIQUE,
    restaurant_name varchar2(1000),
    restaurant_tell varchar2(1000),
    restaurant_address varchar2(1000),
    restaurant_owner varchar2(1000),
    restaurant_businessNumber number UNIQUE,
    restaurant_businessNumber_Img varchar2(1000),
    category_id number UNIQUE,
    restaurant_accept number,
    restaurant_grade binary_double,
    restaurant_date date default sysdate,
    latitude number,
    longitude number
);

create table orders (
    order_id number primary key,
    user_id number UNIQUE,
    restaurant_id number UNIQUE,
    order_price number,
    order_confirm varchar2(1000),
    order_date date default sysdate,
    menu_list varchar2(1000),
    order_type varchar2(1000),
    review_check number
);

create table users (
    user_id number primary key,
    user_account varchar2(100) UNIQUE,
    user_password varchar2(100),
    user_address varchar2(500),
    user_tell varchar2(500),
    user_nickname varchar2(500) UNIQUE,
    user_name varchar2(200),
    user_level number default 2,
    user_point number default 2000,
    user_email varchar2(4000) UNIQUE,
    user_date date default sysdate
);

create table menus (
    menu_id number primary key,
    menu_name varchar2(1000),
    menu_price number,
    menu_description varchar2(1000),
    menu_image varchar2(1000),
    restaurant_id number UNIQUE
);

create table rooms (
    room_id number primary key,
    room_number number,
    restaurant_id number UNIQUE,
    room_check number
);

create table seat_orders (
    seat_order_id number primary key,
    reservation_time date default sysdate,
    restaurant_id number UNIQUE,
    user_id number UNIQUE,
    room_id number UNIQUE,
    order_id number UNIQUE,
    request varchar2(1000)
);

create table categories (
    category_id number primary key,
    category_name varchar2(1000) UNIQUE
);

create table reviews (
    review_id number primary key,
    review_content varchar2(1000),
    review_date date default sysdate,
    review_grade binary_double,
    user_id number UNIQUE,
    restaurant_id number UNIQUE,
    review_check number,
    review_img varchar(2000),
    order_id number UNIQUE
);

create table replies (
    review_id number primary key,
    restaurant_id number UNIQUE,
    reply_content varchar2(500),
    reply_date date default sysdate
);


-------------------------------------------------------------외래키(참조)

ALTER TABLE questions ADD CONSTRAINTS  fk_question_category_id
FOREIGN KEY (question_category_id) 
REFERENCES question_categories(question_category_id);

ALTER TABLE questions ADD CONSTRAINTS  fk_user_id
FOREIGN KEY (user_id_send) 
REFERENCES users(user_id);

ALTER TABLE questions ADD CONSTRAINTS  fk_user_id_receive
FOREIGN KEY (user_id_receive) 
REFERENCES users(user_id);

ALTER TABLE reviews ADD CONSTRAINTS  fk_review_id
FOREIGN KEY (review_id) 
REFERENCES replies(review_id);

ALTER TABLE reviews ADD CONSTRAINTS  fk_user_id_review
FOREIGN KEY (user_id) 
REFERENCES users(user_id);

ALTER TABLE reviews ADD CONSTRAINTS  fk_restaurant_id_review
FOREIGN KEY (restaurant_id) 
REFERENCES restaurants(restaurant_id);

ALTER TABLE reviews ADD CONSTRAINTS  fk_order_id_review
FOREIGN KEY (order_id) 
REFERENCES orders(order_id);

ALTER TABLE orders ADD CONSTRAINTS  fk_restaurant_id_order
FOREIGN KEY (restaurant_id) 
REFERENCES restaurants(restaurant_id);

ALTER TABLE orders ADD CONSTRAINTS  fk_user_id_order
FOREIGN KEY (user_id) 
REFERENCES users(user_id);

ALTER TABLE restaurants ADD CONSTRAINTS  fk_user_id_restaurant
FOREIGN KEY (user_id) 
REFERENCES users(user_id);

ALTER TABLE restaurants ADD CONSTRAINTS  fk_category_id_restaurant
FOREIGN KEY (category_id) 
REFERENCES categories(category_id);

ALTER TABLE seat_orders ADD CONSTRAINTS  fk_restaurant_id_seat_order
FOREIGN KEY (restaurant_id) 
REFERENCES restaurants(restaurant_id);

ALTER TABLE seat_orders ADD CONSTRAINTS  fk_room_id_seat_order
FOREIGN KEY (room_id) 
REFERENCES rooms(room_id);

ALTER TABLE seat_orders ADD CONSTRAINTS  fk_order_id_seat_order
FOREIGN KEY (order_id) 
REFERENCES orders(order_id);

ALTER TABLE rooms ADD CONSTRAINTS  fk_restaurant_id_rooms
FOREIGN KEY (restaurant_id) 
REFERENCES restaurants(restaurant_id);


------------------------------------------------
alter session set nls_date_format = 'YY/MM/DD HH24:MI:SS';
-----------------------------------------------------------

--04/28 시퀸스 생성 sql 문 

CREATE SEQUENCE restaurants_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE users_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE orders_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE menus_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE rooms_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE seat_orders_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE categories_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE reviews_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE replies_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE questions_seq
START with 1
increMent by 1
nomaxvalue;

CREATE SEQUENCE question_categories_seq
START with 1
increMent by 1
nomaxvalue;


commit;


//5월1일  : 
        1. reviews table -> order_id (NUMBER) 추가 필요함 -> VO 수정 필요  (orders table 참조)
        2.  reviews table -> 리뷰체크(review_check) 칼럼 추가 필요함 -> VO 수정 필요 (작성: 1 / 미작성 : 0)
        3. reviews table -> 리뷰 이미지 칼럼(review_img) 추가 필요함 ->  VO 수정 필요
